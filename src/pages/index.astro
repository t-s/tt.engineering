---
import Layout from '../layouts/Layout.astro';
import ServiceTile from '../components/ServiceTile.astro';
import ContactForm from '../components/ContactForm.astro';
import HeroSection from '../components/HeroSection.astro';
import Modal from '../components/Modal.astro';
---

<Layout title="Timothy Technologies | Software Consulting">
	<div class="main-container">
		<HeroSection />

		<h2 class="section-title" id="services">Our Services</h2>
		<div class="tile-grid">
			<ServiceTile 
				id="tile-1"
				title="Custom Software"
				description="Tailored solutions designed to meet your specific business needs."
			/>
			<ServiceTile 
				id="tile-2"
				title="Web Development"
				description="Responsive and performant web applications built with modern technologies."
			/>
			<ServiceTile 
				id="tile-3"
				title="Mobile Apps"
				description="Native and cross-platform mobile applications for iOS and Android."
			/>
		</div>
		
		<!-- Modals -->
		<Modal id="tile-1" />
		<Modal id="tile-2" />
		<Modal id="tile-3" />
		
		<script>
			document.addEventListener('DOMContentLoaded', function() {
				// Get all tiles that trigger modals
				const tiles = document.querySelectorAll('[data-modal-trigger]');
				
				// Add click event to each tile
				tiles.forEach(tile => {
					tile.addEventListener('click', function() {
						const tileId = this.getAttribute('data-tile-id');
						const modal = document.getElementById(`modal-${tileId}`);
						
						if (modal) {
							// Clone the tile content for the modal
							const title = this.querySelector('h3').textContent;
							const description = this.querySelector('p').textContent;
							
							// Set modal content with additional details based on service type
							const modalBody = modal.querySelector('.modal-body');
							
							let additionalContent = '';
							if (tileId === 'tile-1') {
								additionalContent = `
									<div class="modal-details">
										<h4>Our Custom Software Solutions</h4>
										<ul>
											<li>Enterprise Application Development</li>
											<li>Legacy System Modernization</li>
											<li>Database Design & Optimization</li>
											<li>API Development & Integration</li>
											<li>Workflow Automation</li>
										</ul>
									</div>
								`;
							} else if (tileId === 'tile-2') {
								additionalContent = `
									<div class="modal-details">
										<h4>Our Web Development Expertise</h4>
										<ul>
											<li>Full-Stack Web Applications</li>
											<li>E-commerce Platforms</li>
											<li>Content Management Systems</li>
											<li>Progressive Web Apps (PWAs)</li>
											<li>Web Performance Optimization</li>
										</ul>
									</div>
								`;
							} else if (tileId === 'tile-3') {
								additionalContent = `
									<div class="modal-details">
										<h4>Our Mobile App Capabilities</h4>
										<ul>
											<li>iOS & Android Native Apps</li>
											<li>Cross-platform Development</li>
											<li>Mobile UI/UX Design</li>
											<li>App Store Optimization</li>
											<li>Mobile Backend Development</li>
										</ul>
									</div>
								`;
							}
							
							modalBody.innerHTML = `
								<h3>${title}</h3>
								<p>${description}</p>
								${additionalContent}
							`;
							
							// Show the modal
							modal.setAttribute('aria-hidden', 'false');
							
							// Lock body scroll
							document.body.style.overflow = 'hidden';
						}
					});
				});
				
				// Close modal when clicking overlay or close button
				document.querySelectorAll('.modal').forEach(modal => {
					const closeBtn = modal.querySelector('.modal-close');
					const overlay = modal.querySelector('.modal-overlay');
					
					// Close with X button
					closeBtn.addEventListener('click', () => {
						modal.setAttribute('aria-hidden', 'true');
						document.body.style.overflow = '';
					});
					
					// Close by clicking overlay
					overlay.addEventListener('click', () => {
						modal.setAttribute('aria-hidden', 'true');
						document.body.style.overflow = '';
					});
					
					// Close with Escape key
					document.addEventListener('keydown', e => {
						if (e.key === 'Escape' && modal.getAttribute('aria-hidden') === 'false') {
							modal.setAttribute('aria-hidden', 'true');
							document.body.style.overflow = '';
						}
					});
				});
			});
		</script>

		<h2 class="section-title" id="about">About Us</h2>
		<div class="about-section">
			<div class="tile about-content" id="tile-4">
				<p>Timothy Technologies is a software consulting agency focused on delivering high-quality software solutions. We partner with businesses to solve complex problems with elegant code.</p>
				<p>With leadership experience ranging from NASA projects to co-founding NASDAQ-listed public entities, we lead teams by example and through expert communication.</p>
				<p>Based in the Georgetown neighborhood of Washington, DC, we bring both technical expertise and a collaborative approach to every project.</p>
				
				<div class="proficiencies">
					<h4>Technical Proficiencies</h4>
					<div class="proficiency-categories">
						<div class="proficiency-category">
							<h5>Languages</h5>
							<ul>
								<li>Python</li>
								<li>JavaScript/TypeScript</li>
								<li>Java</li>
								<li>C/C++</li>
								<li>SQL</li>
							</ul>
						</div>
						<div class="proficiency-category">
							<h5>Frameworks</h5>
							<ul>
								<li>Django</li>
								<li>React</li>
								<li>React Native</li>
								<li>Node.js</li>
								<li>Express</li>
							</ul>
						</div>
						<div class="proficiency-category">
							<h5>Data & Cloud</h5>
							<ul>
								<li>PostgreSQL</li>
								<li>MongoDB</li>
								<li>AWS</li>
								<li>Azure</li>
								<li>Docker/Kubernetes</li>
							</ul>
						</div>
					</div>
				</div>
			</div>
			<div class="map-container">
				<div id="map"></div>
			</div>
		</div>

		<h2 class="section-title" id="contact">Get In Touch</h2>
		<div class="tile" id="tile-5">
			<ContactForm />
		</div>
	</div>
</Layout>

<style>
.main-container {
	max-width: 1400px;
	margin: 2rem auto;
	padding: 0 2rem;
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
	gap: 2rem;
}

.section-title {
	grid-column: 1 / -1;
	margin-top: 1.5rem;
	border-bottom: 4px solid black;
	padding-bottom: 0.5rem;
}

.tile-grid {
	grid-column: 1 / -1;
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
	gap: 2rem;
}

.about-section {
	grid-column: 1 / -1;
	display: grid;
	grid-template-columns: 3fr 2fr;
	gap: 2rem;
}

.about-content {
	margin: 0;
}

.map-container {
	border: 4px solid black;
	box-shadow: var(--shadow);
	overflow: hidden;
	min-height: 300px;
	transition: transform 0.2s ease;
	position: relative;
	background-color: #141414;
	display: flex;
	align-items: center;
	justify-content: center;
}

.map-container:hover {
	transform: translate(-4px, -4px);
	box-shadow: 12px 12px 0px rgba(0, 0, 0, 0.8);
}

#map {
	width: 100%;
	height: 100%;
	position: absolute;
	top: 0;
	left: 0;
}

/* Fix Mapbox attribution */
.mapboxgl-ctrl-bottom-right,
.mapboxgl-ctrl-bottom-left {
	font-size: 11px;
}

/* Fix map canvas and attribution bg colors */
.mapboxgl-canvas-container {
	background-color: #141414;
}

.mapboxgl-ctrl-attrib-inner {
	background-color: rgba(20, 20, 20, 0.8);
	padding: 0 4px;
	border-radius: 3px;
}

/* Proficiencies Section */
.proficiencies {
	margin-top: 2rem;
	padding-top: 1.5rem;
	border-top: 3px dashed rgba(255, 255, 255, 0.3);
}

.proficiencies h4 {
	font-size: 1.4rem;
	font-weight: 700;
	margin-bottom: 1.2rem;
	text-transform: uppercase;
}

.proficiency-categories {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	gap: 1.5rem;
}

.proficiency-category h5 {
	font-size: 1.1rem;
	font-weight: 600;
	margin-bottom: 0.8rem;
	text-transform: uppercase;
	border-bottom: 2px solid rgba(255, 255, 255, 0.3);
	padding-bottom: 0.3rem;
}

.proficiency-category ul {
	list-style: none;
	padding: 0;
}

.proficiency-category li {
	padding: 0.3rem 0;
	font-size: 0.95rem;
}

@media (max-width: 768px) {
	.main-container {
		padding: 0 1rem;
	}

	.about-section {
		grid-template-columns: 1fr;
	}

	.map-container {
		min-height: 200px;
	}
	
	.proficiency-categories {
		grid-template-columns: 1fr;
		gap: 1rem;
	}
	
	.proficiency-category {
		margin-bottom: 1rem;
	}
}

@media (min-width: 769px) and (max-width: 1024px) {
	.proficiency-categories {
		grid-template-columns: repeat(2, 1fr);
	}
}
</style>